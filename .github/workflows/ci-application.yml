name: Application CI

on:
  push:
    branches:
      - 'integration'

permissions:
  contents: write  # Grants permission to push changes to the repository

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' 

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Lint code
        run: |
          cd frontend
          npm run lint | tee /dev/null

      - name: Build
        run: |
          cd frontend
          npm run build
          
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and Push Frontend
        working-directory: ./frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/challenge-frontend:${{ github.sha }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/challenge-frontend:${{ github.sha }}
      
      - name: Build and Push Backend
        working-directory: ./backend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/challenge-backend:${{ github.sha }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/challenge-backend:${{ github.sha }}
      
      - name: Update docker-compose
        run: |
          # Ensure correct image tags are updated
          sed -i 's|${{ secrets.DOCKERHUB_USERNAME }}/challenge-backend:latest|${{ secrets.DOCKERHUB_USERNAME }}/challenge-backend:${{ github.sha }}|g' docker-compose.yaml
          sed -i 's|${{ secrets.DOCKERHUB_USERNAME }}/challenge-frontend:latest|${{ secrets.DOCKERHUB_USERNAME }}/challenge-frontend:${{ github.sha }}|g' docker-compose.yaml
          
          # Check if changes were made
          if [[ -n $(git status -s) ]]; then
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add docker-compose.yaml
            git commit -m "Update image tags to ${{ github.sha }}"
            git push
          else
            echo "No changes"
          fi